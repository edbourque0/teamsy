version: "3.9"

services:
  redis:
    image: redis:7
    container_name: teamsy_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  web:
    build: .
    container_name: teamsy_web
    command: >
      sh -c "
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000
      "
    env_file: .env
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  worker:
    build: .
    container_name: teamsy_worker
    command: celery -A teamsy worker -l INFO -Q presence --pool=solo
    env_file: .env
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  beat:
    build: .
    container_name: teamsy_beat
    command: celery -A teamsy beat -l INFO
    env_file: .env
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
